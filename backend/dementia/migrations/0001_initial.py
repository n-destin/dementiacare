# Generated by Django 4.2.17 on 2024-12-30 12:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="phone numbner must be entered in format '+00000000' up to 15 digits", regex='^\\+?1?\\d{9,15}$')])),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('U', 'Unspecified')], default='U', max_length=1)),
                ('age', models.IntegerField(blank=True, default=0, null=True)),
                ('languages_spoken', models.JSONField(default=list)),
                ('groups', models.ManyToManyField(related_name='person_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='person_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dementia.person')),
                ('institution_name', models.CharField(blank=True, default='', max_length=100)),
                ('about', models.TextField(blank=True, default='')),
                ('website', models.URLField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('dementia.person',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dementia.person')),
                ('diagnosis', models.JSONField(blank=True, default=list)),
                ('medications', models.JSONField(blank=True, default=list)),
                ('medical_conditions', models.JSONField(blank=True, default=list)),
                ('surgical_history', models.JSONField(blank=True, default=list)),
                ('family_medical_history', models.JSONField(blank=True, default=list)),
                ('therapists_additions', models.JSONField(blank=True, default=list)),
                ('assigned_therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to='dementia.person')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('dementia.person',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Therapist',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dementia.person')),
                ('Credentials', models.TextField(blank=True, default='')),
                ('Education', models.TextField(blank=True, default='')),
                ('previous_positions', models.TextField(blank=True, default='')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('resume_pdf', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('specialization', models.CharField(blank=True, default='', max_length=100)),
                ('years_of_experience', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(80)])),
                ('services_provided', models.TextField(blank=True, default='')),
                ('can_help_with', models.JSONField(blank=True, default=list)),
                ('patients', models.ManyToManyField(blank=True, related_name='therapists', to='dementia.patient')),
                ('related_institutions', models.ManyToManyField(related_name='institution', to='dementia.institution')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('dementia.person',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, default='')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_as_patient', to='dementia.person')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_as_provider', to='dementia.person')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='')),
                ('date_sent', models.DateField(default=django.utils.timezone.now)),
                ('person', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='dementia.person')),
            ],
        ),
        migrations.CreateModel(
            name='Couple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_length', models.IntegerField(default=0)),
                ('therapist_additions', models.JSONField(blank=True, default=list)),
                ('partner_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couple_partner_one', to='dementia.person')),
                ('partner_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couple_partner_two', to='dementia.person')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_name', models.CharField(blank=True, default='', max_length=20)),
                ('creation_date', models.DateField(default=django.utils.timezone.now)),
                ('messages', models.ManyToManyField(blank=True, to='dementia.message')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='dementia.person')),
            ],
        ),
        migrations.CreateModel(
            name='TherapySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(default=django.utils.timezone.now)),
                ('end_time', models.TimeField(default=django.utils.timezone.now)),
                ('video_link', models.TextField(blank=True, default='')),
                ('transcription', models.TextField(blank=True, default='')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='dementia.patient')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='dementia.therapist')),
            ],
        ),
        migrations.CreateModel(
            name='Relative',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dementia.person')),
                ('relationship', models.TextField(blank=True, default='')),
                ('therapists_additions', models.JSONField(blank=True, default=list)),
                ('related_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_relatives', to='dementia.person')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('dementia.person',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
